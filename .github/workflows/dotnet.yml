# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
      checks: write
      pull-requests: write

    strategy:
      fail-fast: false
      matrix: 
        language: [ 'csharp' ]
        dotnet-version: [ '6.0.x' ]
    steps:
    - uses: actions/checkout@v3
    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Restore dependencies
      run: dotnet restore AspNetCoreTests/AspNetCoreTests.sln
    - name: Build
      run: dotnet build --no-restore AspNetCoreTests/AspNetCoreTests.sln
    - name: Test
      run: dotnet test --no-build --verbosity normal AspNetCoreTests/AspNetCoreTests.sln --logger trx --results-directory "${{ github.workspace }}/TestResults" -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover

    - run: |
        echo "******************"
        find  ${{github.workspace }} -type f
        
    - name: Code Coverage Report
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: ${{ github.workspace }}/**/coverage.opencover.xml
        badge: true
        fail_below_min: true
        format: markdown
        hide_branch_rate: false
        hide_complexity: true
        indicators: true
        output: both
        thresholds: '60 80'
        
    - name: ReportGenerator
      uses: danielpalme/ReportGenerator-GitHub-Action@5.1.18
      with:
        reports: '/home/runner/work/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests.UnitTests/TestResults/coverage.opencover.xml' # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
        targetdir: '/home/runner/work/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests.UnitTests/TestResults/' # REQUIRED # The directory where the generated report should be saved.
        reporttypes: 'HtmlInline;Cobertura;MarkdownSummary'
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
          name: coverage-results-${{ matrix.dotnet-version }}
          path: /home/runner/work/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests/AspNetCoreTests.UnitTests/TestResults/
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}          
        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: ${{ github.workspace }}/TestResults
      # Use always() to always run this step to publish test results when there are test failures
      if: ${{ always() }}  
    
    - name: Test Report
      uses: dorny/test-reporter@v1
      if: success() || failure()    # run this step even if previous step failed
      with:
        name: Dotnet Tests            # Name of the check run which will be created
        path: /home/runner/work/AspNetCoreTests/AspNetCoreTests/TestResults/*.trx    # Path to test results
        reporter: dotnet-trx        # Format of test results
        
    - name: Publish Test Results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        files: |
          /home/runner/work/AspNetCoreTests/AspNetCoreTests/TestResults/*.trx
  
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      with:
        category: "/language:${{matrix.language}}"
      
      
      
      
      

